<style>
.small-code pre code {
font-size: 1em;
}
</style>

Occupancy Modeling
========================================================
author: Derek Corcoran derek.corcoran.barrios@gmail.com
date: `r Sys.Date()`
autosize: true
transition: rotate

```{r setup, include=FALSE}
opts_chunk$set(cache=TRUE)
```


```{r,echo=FALSE,out.height="320px",out.width="320px"}
library(DiversityOccupancy)
data("BatOccu")
data("Dailycov")
data("sampling.cov")
BatOccupancy <-batchoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal +I(Burn.intensity.basal^2))
responseplot.occu(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
```


Fitness or abundance patterns
========================================================
incremental: true

- Time consuming
- Hard to replicate
- Almost impossible in rare species
- Need to be able to detect the species
- Species might be there but not detected
- false absences might bias estimates


***

```{r, echo=FALSE}
set.seed(124)
x2<-c(1:50)
y2<- 50*x2 + -1*((x2)^2) + 20 + rnorm(50, 0 , 50)
plot(y2~x2, xlab = "Environmental Variable 1", ylab = "Abundance")
a <- glm(y2~ x2+ I(x2^2))
b <- predict(a, new.data = c(1:50))
lines(b)
```

Imperfect detection
========================================================
- Detection is usually not perfect
- Depends on:
  + Species
  + Season
  + Observer
  + Method
  + Weather
  
***

```{r, echo=FALSE}
library(raster)
graph1<-stack("~/Documents/OccupancyClass/OccupancyClass/Plumas bats.jpg")
plotRGB(graph1)
```


Imperfect detection
========================================================

- Detection is usually not perfect
- Depends on:
  + Species
  + Season
  + Observer
  + Method
  + Weather
  
***

```{r, echo=FALSE}
library(raster)
graph1<-stack("~/Documents/OccupancyClass/OccupancyClass/Plumas bats3.png")
plotRGB(graph1)
```

How to sample for occupancy modeling
========================================================
incremental: true
 ![sites](unnamed-chunk-131-1.png)
 
***

<small>
- repeated detection attempts
- Sampling site 1
  + Day 1 not detected
  + Day 2 detected
  + Day 3 detected
  + detection history 0 1 1
- Sampling site 2
  + Day 1 detected
  + Day 2 not detected
  + Day 3 not detected
  + detection history 1 0 0</small>


Occupancy modeling
========================================================
incremental: true

- Fraction of habitat occupied by species (If occupancy 0.4 expected 4 of 10 patches used)

***

![guan](https://cienciaustral.files.wordpress.com/2015/11/unnamed-chunk-7-1.png?w=736)

Two functions
========================================================
 \( p* = 1 -  \left( 1 - p \right)^t \)

 \( \psi = \frac{Sd}{S \times\ p*} \)
 
 
 \( \psi = \frac{exp(Cov \times\ \beta)}{1 + exp(Cov \times\ \beta)} \)


***

- Detection probability psi
- Occupancy probability p given presence
- p* probability to detect at least one time in t surveys
- S number of surveyed sites
- Sd number of sites where species is detected

Two functions
========================================================
 \( p* = 1 -  \left( 1 - p \right)^t \)

 \( \psi = \frac{Sd}{S \times\ p*} \)

***

p = 0.25

\( p* = 1 -  \left( 1 - 0.25 \right)^3 \) = `r 1 - (1-0.25)^3 `

S = 100

Sd = 30

\( \psi = \frac{30}{100 \times\ 0.578} \) = `r 30/(100*((1-0.25)^3))`

Probability of detection
========================================================

```{r, echo= FALSE,out.height="400px",out.width="400px"}
t <- c(1:12)
p <- (1 -(1-0.25)^t)

plot(p ~ t, type = "b")
lines(abline(h=0.95, lty= 2, lwd = 2))

```

More repeated sampling p* ~ 1

So you want to do Occupancy modeling
========================================================
left: 70%
incremental: true

- Species detection history
  + eg. 0 1 0
- Detection covariates
  + One measurement for every sampling period
  + eg date, observer, detection method, humidity
- Occupancy covariates
  + One measurement per site
  + Stable through all sampling (Altitude, canopy cover)
  
  ***
  
  ![fig](https://cienciaustral.files.wordpress.com/2015/11/img_0682.jpg?w=700&h=)
  
Assumptions of occupancy modeling
========================================================

- Closure:  No changes in occupancy between surveys
- [No false positives](http://www.srs.fs.usda.gov/pubs/ja/2015/ja_2015_ferguson_001.pdf): detecting a species when it is not present, can occur
through  species  misidentification

***

![coso](https://cienciaustral.files.wordpress.com/2015/07/img_05941.jpg?w=364&h=485&crop=1)

Special cases of occupancy modeling
========================================================

- [Dynamic occupancy modeling](http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3892356/)
- [Occupancy modeling with false positives](https://www.uvm.edu/rsenr/vtcfwru/spreadsheets/occupancy/Occupancy%20Exercises/Exercise12/Royle_Link_2006.pdf)
- [Abundance from occupancy](https://www.uvm.edu/rsenr/vtcfwru/spreadsheets/occupancy/Occupancy%20Exercises/Exercise7/RoyleNichols2003.pdf)

***
Bled et al Ecol Evol. 2013 Dec; 3(15): 4896â€“4909. 
![dynamic](http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3892356/bin/ece30003-4896-f1.jpg)

Literature
========================================================
- [MacKenzie's book](http://www.amazon.com/Occupancy-Estimation-Modeling-Inferring-Occurrence/dp/0120887665)
- [MacKenzie et al 2002 ecology paper](https://www.uvm.edu/rsenr/vtcfwru/spreadsheets/occupancy/Occupancy%20Exercises/Exercise3/MacKenzie%20et%20al.%20single-season.pdf)


***

![book](http://ecx.images-amazon.com/images/I/51Q3tQovyLL._SX311_BO1,204,203,200_.jpg)

Niche modeling
========================================================
- Alternative to occupancy
- When detection ~ perfect
- [Almost every algorithm uses pseudoabsenses](https://cran.r-project.org/web/packages/dismo/vignettes/sdm.pdf)

***

![niche](https://www.unil.ch/webdav/site/idyst/shared/modeling.png)

Package DiversityOccupancy
========================================================

<small>Advantages
- Batch modeling for several species
- Calculate diversity
- Graphical outcomes
- Selecting [priority areas](http://rpubs.com/derek_corcoran/DiversityOccupancy) from Diversity and individual species abundance
- Automatic model selection


Cons
- No false positive occupancy modeling (yet!)
- No dynamic occupancy modeling (yet!)
- Automatic model selection </small>

***

![mist](https://pixabay.com/static/uploads/photo/2015/11/28/01/14/birds-1066650_960_720.jpg)


Data structure
========================================================
incremental: true

- Pres: A data frame with detection history
- Obscov: A list of data frames with detection covariates
- Sitecov: A data frame with occupancy covariates

***

![data](Data.png)


Detection history
========================================================

```{r, echo = TRUE}
BatOccupancy <- read.csv("~/Documents/OccupancyClass/OccupancyClass/Data/BatOccu.csv", row.names=1)
head(BatOccupancy[,1:6], 6)
```


Occupancy covariates
========================================================
class: small-code

```{r, echo = TRUE}
OccuCov <- read.csv("~/Documents/OccupancyClass/OccupancyClass/Data/OccuCov.csv", row.names=1)
head(OccuCov[,1:3], 6)
```

Detection covariates
========================================================
class: small-code

```{r, echo = TRUE}
DetCov <- read.csv("~/Documents/OccupancyClass/OccupancyClass/Data/DetCov.csv", row.names=1)
head(DetCov[,1:6], 3)
class(DetCov)
```

- Remember we need our Detection Variables to be a list!!

Detection covariates
========================================================
class: small-code

```{r, echo = TRUE} 
Julian <- DetCov[,1:3]
MaxHum <- DetCov[,4:6]
MaxTemp<- DetCov[,7:9]
DetCov <- list(Julian, MaxHum, MaxTemp)
str(DetCov)
```

Detection covariates
========================================================
- R needs to be able to **call** the data frames in our list
```{r, echo = TRUE} 
names(DetCov)
names(DetCov) <- c("julian", "maxhum", "maxtemp")
names(DetCov)
```

Occupancy using DiversityOccupancy
========================================================
incremental: true

batchoccu(pres, sitecov, obscov, spp, form)

- **pres**: Detection history data.frame
- **sitecov**: Occupancy covariates data.frame
- **obscov**: Detection covariates List of data.frames *with Names*
- **spp**: the number of species in the pres data.frame
- **form**: formula in the format ~ obscov ~ sitecov 

Remember, we need p to calculate psi (detection before occupancy)

Occupancy using DiversityOccupancy
========================================================
class: small-code

```{r, echo=FALSE}
library(DiversityOccupancy)
library(raster)
```

```{r, echo=TRUE}
BatOccupancy <-batchoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov,spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
names(BatOccupancy)
summary(BatOccupancy$fit)
```



Occupancy using DiversityOccupancy
========================================================
class: small-code

```{r, echo=TRUE}
BatOccupancy$models[[2]]
```

Plotting Occupancy response
========================================================
class: small-code

```{r, echo=TRUE}
responseplot.occu(batch = BatOccupancy, spp = 15, variable = Burn.intensity.soil)
```

- Model, Variable, and Species


Model selection
========================================================
class: small-code

```{r, echo=TRUE}
BatOccupancy2 <- batchoccu(pres = BatOccu[,1:9], sitecov = sampling.cov, obscov = Dailycov,spp = 3, form = ~ Meanhum + Meantemp ~  Burn.intensity.basal + I(Burn.intensity.basal^2), dredge = TRUE)
BatOccupancy2$models[[3]]
```

Again we can do see at individual variables:
========================================================
class: small-code

```{r, echo = TRUE}
responseplot.occu(batch = BatOccupancy2, spp = 3, variable = Burn.intensity.basal)
```

Predictions
========================================================
class: small-code

What if we have spatial data

```{r, echo= TRUE}
library(raster)
plot(plumas.stack)
```
***
lets make it smaller
```{r, echo=TRUE}
e <- extent(-120.9305, -120.4498, 40.06769, 40.29006)
little.plumas <- stack(crop(plumas.stack, e))
plot(little.plumas)
```

Predictions
========================================================
class: small-code

```{r, echo=TRUE}
Occupancy.stack <- occupancy.predict(batch = BatOccupancy2, new.data =
little.plumas)
```

***

```{r, echo=TRUE}
plot(Occupancy.stack)
```

Abundance and diversity using DiversityOccupancy
========================================================
class: small-code

```{r, echo=TRUE}
BatAbundance <-diversityoccu(pres = BatOccu, sitecov = sampling.cov, obscov = Dailycov, spp = 17, form = ~ Julian + Meanhum + Meantemp + sdhum + sdtemp ~ Burn.intensity.soil + I(Burn.intensity.soil^2) + Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2))
names(BatAbundance)
```

```{r}
summary(BatAbundance$species)
```


========================================================
class: small-code

responseplot is a ggplot object easy to [modify](http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/)
```{r, echo=TRUE}
responseplot.abund(BatAbundance, spp = 1, variable = Burn.intensity.Canopy)
```

***

```{r, echo=TRUE}
library(ggplot2)
K <- responseplot.abund(BatAbundance, spp = 1, variable = Burn.intensity.Canopy)
K + geom_line(color = "red") + theme_dark()
```


Modeling diversity from abundance
========================================================
class: small-code

```{r}
glm.diversity <- model.diversity(BatAbundance, method = "g")
```

Modeling diversity from abundance
========================================================
class: small-code

```{r}
kable(glm.diversity$Table)
glm.diversity$Best_model
```

Modeling diversity from abundance
========================================================
class: small-code

```{r}
responseplot.diver(glm.diversity, variable = Burn.intensity.Canopy)
```

Selecting conservation areas based on diversity and abundance
========================================================
class: small-code
[Full tutorial](http://rpubs.com/derek_corcoran/DiversityOccupancy)
```{r}
Selected.area <- diversity.predict(model = BatAbundance, diverse = glm.diversity,
new.data = little.plumas, quantile.nth = 0.85, species =
c(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE,FALSE,FALSE))
```

Selecting conservation areas
========================================================
class: small-code

```{r}
names(Selected.area)
plot(Selected.area$priority.area, colNA = "black")
```

Selecting conservation areas
========================================================
class: small-code

```{r}
plot(Selected.area$diversity.raster, colNA = "black")
```

***

```{r}
plot(Selected.area$species, colNA = "black")
```


Package unmarked
========================================================

Advantages

- Finer control
- Modeling with false positives
- Dynamic occupancy modeling

Cons

- More work to use data
- No Diversity modeling
- No graphical output
- No automatica model selection

***

![mist2](http://gallery.usgs.gov/images/04_13_2010/q7LWo00nn2_04_13_2010/large/05.jpg)

Data preparation
========================================================
class: small-code
<small>- Almost the same as in **DiversityOccupancy**
- One detection history file per species
- Gather them in a *unmarkedFrameOccu*
</small>
```{r, echo = TRUE}
BatOccupancy <- read.csv("~/Documents/OccupancyClass/OccupancyClass/Data/BatOccu.csv", row.names=1)
head(BatOccupancy[,1:12], 3)
MyyuOccupancy <- BatOccupancy[,1:3]
head(MyyuOccupancy, 3)
```

Data preparation
========================================================
class: small-code
<small>- Detection and Occupancy covariates work the same as in **DiversityOccupancy**
- Gather them in a *unmarkedFrameOccu*
</small>
```{r, echo = TRUE}
library(unmarked)
SimOccuMyYu <- unmarkedFrameOccu(y = MyyuOccupancy, siteCovs = sampling.cov , obsCovs = Dailycov)
```

***
```{r}
plot(SimOccuMyYu)
```

Occupancy modeling with unmarked
========================================================
class: small-code
<small> Repeat for every species </small>
```{r}
model.Occu.My.Yu <- occu(~ Julian + Meanhum + Meantemp ~ Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2), SimOccuMyYu) 
summary(model.Occu.My.Yu)
```

Occupancy modeling with unmarked
========================================================
class: small-code
```{r}
plot(model.Occu.My.Yu)
```

Model selection
========================================================
class: small-code
```{r}
model.Occu.My.Yu1 <- occu(~ Julian + Meanhum + Meantemp ~ Burn.intensity.Canopy + I(Burn.intensity.Canopy^2) + Burn.intensity.basal + I(Burn.intensity.basal^2), SimOccuMyYu) 
model.Occu.My.Yu <- occu(~ 1 ~ 1, SimOccuMyYu) 
model.Occu.My.Yu2 <- occu(~ Julian + Meanhum + Meantemp ~ Burn.intensity.Canopy + Burn.intensity.basal, SimOccuMyYu) 
fl <- fitList(Full=model.Occu.My.Yu1, linear=model.Occu.My.Yu2, Null=model.Occu.My.Yu)
ms <- modSel(fl, nullmod="Null")
ms
```

Set every model you need